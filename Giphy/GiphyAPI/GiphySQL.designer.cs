#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GiphyAPI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Giphy")]
	public partial class GiphySQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_user(tbl_user instance);
    partial void Updatetbl_user(tbl_user instance);
    partial void Deletetbl_user(tbl_user instance);
    partial void Inserttbl_categoriesByUser(tbl_categoriesByUser instance);
    partial void Updatetbl_categoriesByUser(tbl_categoriesByUser instance);
    partial void Deletetbl_categoriesByUser(tbl_categoriesByUser instance);
    partial void Inserttbl_usersGiphy(tbl_usersGiphy instance);
    partial void Updatetbl_usersGiphy(tbl_usersGiphy instance);
    partial void Deletetbl_usersGiphy(tbl_usersGiphy instance);
    #endregion
		
		public GiphySQLDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GiphyConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GiphySQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GiphySQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GiphySQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GiphySQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_user> tbl_users
		{
			get
			{
				return this.GetTable<tbl_user>();
			}
		}
		
		public System.Data.Linq.Table<tbl_categoriesByUser> tbl_categoriesByUsers
		{
			get
			{
				return this.GetTable<tbl_categoriesByUser>();
			}
		}
		
		public System.Data.Linq.Table<tbl_usersGiphy> tbl_usersGiphies
		{
			get
			{
				return this.GetTable<tbl_usersGiphy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="giphyadmin.tbl_users")]
	public partial class tbl_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_user;
		
		private string _username;
		
		private string _password;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private System.DateTime _adddttm;
		
		private System.DateTime _lastlogin;
		
		private EntitySet<tbl_categoriesByUser> _tbl_categoriesByUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnadddttmChanging(System.DateTime value);
    partial void OnadddttmChanged();
    partial void OnlastloginChanging(System.DateTime value);
    partial void OnlastloginChanged();
    #endregion
		
		public tbl_user()
		{
			this._tbl_categoriesByUsers = new EntitySet<tbl_categoriesByUser>(new Action<tbl_categoriesByUser>(this.attach_tbl_categoriesByUsers), new Action<tbl_categoriesByUser>(this.detach_tbl_categoriesByUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adddttm", DbType="DateTime NOT NULL")]
		public System.DateTime adddttm
		{
			get
			{
				return this._adddttm;
			}
			set
			{
				if ((this._adddttm != value))
				{
					this.OnadddttmChanging(value);
					this.SendPropertyChanging();
					this._adddttm = value;
					this.SendPropertyChanged("adddttm");
					this.OnadddttmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastlogin", DbType="DateTime NOT NULL")]
		public System.DateTime lastlogin
		{
			get
			{
				return this._lastlogin;
			}
			set
			{
				if ((this._lastlogin != value))
				{
					this.OnlastloginChanging(value);
					this.SendPropertyChanging();
					this._lastlogin = value;
					this.SendPropertyChanged("lastlogin");
					this.OnlastloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_user_tbl_categoriesByUser", Storage="_tbl_categoriesByUsers", ThisKey="id_user", OtherKey="id_user")]
		public EntitySet<tbl_categoriesByUser> tbl_categoriesByUsers
		{
			get
			{
				return this._tbl_categoriesByUsers;
			}
			set
			{
				this._tbl_categoriesByUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_categoriesByUsers(tbl_categoriesByUser entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = this;
		}
		
		private void detach_tbl_categoriesByUsers(tbl_categoriesByUser entity)
		{
			this.SendPropertyChanging();
			entity.tbl_user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="giphyadmin.tbl_categoriesByUser")]
	public partial class tbl_categoriesByUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_category;
		
		private string _categoryName;
		
		private string _categoryDescription;
		
		private int _sorting;
		
		private int _id_user;
		
		private System.DateTime _adddttm;
		
		private EntitySet<tbl_usersGiphy> _tbl_usersGiphies;
		
		private EntityRef<tbl_user> _tbl_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_categoryChanging(int value);
    partial void Onid_categoryChanged();
    partial void OncategoryNameChanging(string value);
    partial void OncategoryNameChanged();
    partial void OncategoryDescriptionChanging(string value);
    partial void OncategoryDescriptionChanged();
    partial void OnsortingChanging(int value);
    partial void OnsortingChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void OnadddttmChanging(System.DateTime value);
    partial void OnadddttmChanged();
    #endregion
		
		public tbl_categoriesByUser()
		{
			this._tbl_usersGiphies = new EntitySet<tbl_usersGiphy>(new Action<tbl_usersGiphy>(this.attach_tbl_usersGiphies), new Action<tbl_usersGiphy>(this.detach_tbl_usersGiphies));
			this._tbl_user = default(EntityRef<tbl_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_category", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_category
		{
			get
			{
				return this._id_category;
			}
			set
			{
				if ((this._id_category != value))
				{
					this.Onid_categoryChanging(value);
					this.SendPropertyChanging();
					this._id_category = value;
					this.SendPropertyChanged("id_category");
					this.Onid_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string categoryName
		{
			get
			{
				return this._categoryName;
			}
			set
			{
				if ((this._categoryName != value))
				{
					this.OncategoryNameChanging(value);
					this.SendPropertyChanging();
					this._categoryName = value;
					this.SendPropertyChanged("categoryName");
					this.OncategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryDescription", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string categoryDescription
		{
			get
			{
				return this._categoryDescription;
			}
			set
			{
				if ((this._categoryDescription != value))
				{
					this.OncategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._categoryDescription = value;
					this.SendPropertyChanged("categoryDescription");
					this.OncategoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sorting", DbType="Int NOT NULL")]
		public int sorting
		{
			get
			{
				return this._sorting;
			}
			set
			{
				if ((this._sorting != value))
				{
					this.OnsortingChanging(value);
					this.SendPropertyChanging();
					this._sorting = value;
					this.SendPropertyChanged("sorting");
					this.OnsortingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._tbl_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adddttm", DbType="DateTime NOT NULL")]
		public System.DateTime adddttm
		{
			get
			{
				return this._adddttm;
			}
			set
			{
				if ((this._adddttm != value))
				{
					this.OnadddttmChanging(value);
					this.SendPropertyChanging();
					this._adddttm = value;
					this.SendPropertyChanged("adddttm");
					this.OnadddttmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_categoriesByUser_tbl_usersGiphy", Storage="_tbl_usersGiphies", ThisKey="id_user,id_category", OtherKey="id_user,id_category")]
		public EntitySet<tbl_usersGiphy> tbl_usersGiphies
		{
			get
			{
				return this._tbl_usersGiphies;
			}
			set
			{
				this._tbl_usersGiphies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_user_tbl_categoriesByUser", Storage="_tbl_user", ThisKey="id_user", OtherKey="id_user", IsForeignKey=true)]
		public tbl_user tbl_user
		{
			get
			{
				return this._tbl_user.Entity;
			}
			set
			{
				tbl_user previousValue = this._tbl_user.Entity;
				if (((previousValue != value) 
							|| (this._tbl_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_user.Entity = null;
						previousValue.tbl_categoriesByUsers.Remove(this);
					}
					this._tbl_user.Entity = value;
					if ((value != null))
					{
						value.tbl_categoriesByUsers.Add(this);
						this._id_user = value.id_user;
					}
					else
					{
						this._id_user = default(int);
					}
					this.SendPropertyChanged("tbl_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_usersGiphies(tbl_usersGiphy entity)
		{
			this.SendPropertyChanging();
			entity.tbl_categoriesByUser = this;
		}
		
		private void detach_tbl_usersGiphies(tbl_usersGiphy entity)
		{
			this.SendPropertyChanging();
			entity.tbl_categoriesByUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="giphyadmin.tbl_usersGiphy")]
	public partial class tbl_usersGiphy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_giphyUser;
		
		private int _id_user;
		
		private int _id_category;
		
		private string _id_giphy;
		
		private string _url;
		
		private System.DateTime _addtttm;
		
		private EntityRef<tbl_categoriesByUser> _tbl_categoriesByUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_giphyUserChanging(int value);
    partial void Onid_giphyUserChanged();
    partial void Onid_userChanging(int value);
    partial void Onid_userChanged();
    partial void Onid_categoryChanging(int value);
    partial void Onid_categoryChanged();
    partial void Onid_giphyChanging(string value);
    partial void Onid_giphyChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnaddtttmChanging(System.DateTime value);
    partial void OnaddtttmChanged();
    #endregion
		
		public tbl_usersGiphy()
		{
			this._tbl_categoriesByUser = default(EntityRef<tbl_categoriesByUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_giphyUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_giphyUser
		{
			get
			{
				return this._id_giphyUser;
			}
			set
			{
				if ((this._id_giphyUser != value))
				{
					this.Onid_giphyUserChanging(value);
					this.SendPropertyChanging();
					this._id_giphyUser = value;
					this.SendPropertyChanged("id_giphyUser");
					this.Onid_giphyUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_user", DbType="Int NOT NULL")]
		public int id_user
		{
			get
			{
				return this._id_user;
			}
			set
			{
				if ((this._id_user != value))
				{
					if (this._tbl_categoriesByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_userChanging(value);
					this.SendPropertyChanging();
					this._id_user = value;
					this.SendPropertyChanged("id_user");
					this.Onid_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_category", DbType="Int NOT NULL")]
		public int id_category
		{
			get
			{
				return this._id_category;
			}
			set
			{
				if ((this._id_category != value))
				{
					if (this._tbl_categoriesByUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_categoryChanging(value);
					this.SendPropertyChanging();
					this._id_category = value;
					this.SendPropertyChanged("id_category");
					this.Onid_categoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_giphy", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string id_giphy
		{
			get
			{
				return this._id_giphy;
			}
			set
			{
				if ((this._id_giphy != value))
				{
					this.Onid_giphyChanging(value);
					this.SendPropertyChanging();
					this._id_giphy = value;
					this.SendPropertyChanged("id_giphy");
					this.Onid_giphyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addtttm", DbType="DateTime NOT NULL")]
		public System.DateTime addtttm
		{
			get
			{
				return this._addtttm;
			}
			set
			{
				if ((this._addtttm != value))
				{
					this.OnaddtttmChanging(value);
					this.SendPropertyChanging();
					this._addtttm = value;
					this.SendPropertyChanged("addtttm");
					this.OnaddtttmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_categoriesByUser_tbl_usersGiphy", Storage="_tbl_categoriesByUser", ThisKey="id_user,id_category", OtherKey="id_user,id_category", IsForeignKey=true)]
		public tbl_categoriesByUser tbl_categoriesByUser
		{
			get
			{
				return this._tbl_categoriesByUser.Entity;
			}
			set
			{
				tbl_categoriesByUser previousValue = this._tbl_categoriesByUser.Entity;
				if (((previousValue != value) 
							|| (this._tbl_categoriesByUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_categoriesByUser.Entity = null;
						previousValue.tbl_usersGiphies.Remove(this);
					}
					this._tbl_categoriesByUser.Entity = value;
					if ((value != null))
					{
						value.tbl_usersGiphies.Add(this);
						this._id_user = value.id_user;
						this._id_category = value.id_category;
					}
					else
					{
						this._id_user = default(int);
						this._id_category = default(int);
					}
					this.SendPropertyChanged("tbl_categoriesByUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
